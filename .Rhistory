shiny::runApp()
runApp()
runApp()
(x - min(x)) / diff(range(x))
rescale <- function(x)
(x - min(x)) / diff(range(x))
rescale <- function(x){(x - min(x)) / diff(range(x))}
figure() %>%
ly_annular_wedge(Sepal.Length, Sepal.Width, data = iris,
end_angle = rescale(Petal.Length) * 2 * pi, color = Species,
inner_radius = 0.1, outer_radius = 0.15, alpha = 0.5,
hover = Species)
df %>%
filter(STATION_CODE == 11)
df %>%
filter(STATION_CODE == 11) %>%
select(datetime, WIND_DIRECTION)
runApp()
library(RcppRoll)
library(tmap)
library(data.table)
library(lubridate)
library(sf)
library(dplyr)
library(rbokeh)
library(leaflet)
library(shiny)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
nrd
library(bcmaps)
library(RcppRoll)
library(tmap)
library(data.table)
library(lubridate)
library(sf)
library(dplyr)
library(rbokeh)
library(leaflet)
source("prep.R")
nrd <- nr_districts() %>%
mutate(ORG_UNIT_NAME = gsub(" Natural Resource District", "",ORG_UNIT_NAME))
tm_shape(nrd) +
tm_borders()
runApp()
colors
colors
c("#4E79A7","#A0CBE8","#F28E2B","#FFBE7D","#59A14F","#8CD17D","#B6992D",
"#F1CE63","#499894","#86BCB6","#E15759","#FF9D9A","#79706E","#BAB0AC",
"#D37295","#FABFD2","#B07AA1","#D4A6C8","#9D7660","#D7B5A6")
figure() %>% ly_points(1:10)
figure() %>% ly_points(1:10, color = "red")
color = z)
figure() %>% ly_points(x,y,data.frame(x = 1:10, y = 1:10, z = c("red","red","red","red","red",
"blue","blue","blue","blue","blue")),
color = z)
figure() %>%
ly_points(Sepal.Length, Sepal.Width, data = iris,
color = Species, glyph = Species,
hover = list(Sepal.Length, Sepal.Width))
figure() %>% ly_points(x,y,data.frame(x = 1:10, y = 1:10, z = c("red","red","red","red","red",
"blue","blue","blue","blue","blue")),
color = z, glyph = z)
figure() %>% ly_points(x,y,data.frame(x = 1:10, y = 1:10, z = c("red","red","red","red","red",
"blue","blue","blue","blue","blue")),
color = z)
runApp()
figure(title = paste("Rolling Statistics (most recent:", max(df_sub$datetime),")"),
width = 1600, height = 600,
# legend_location = "top_left",
tools = c("pan", "wheel_zoom", "box_zoom", "reset", "save", "resize")) %>%
ly_lines(datetime, myvar, data = df_sub_adj, group = STATION_ID) %>%
ly_points(datetime, myvar, data = df_sub_adj,
hover = list(datetime, STATION_ID, myvar),
legend = "None",
color = color,
glyph = color) %>%
x_axis(label = "") %>%
y_axis(paste(input$variableID, "Rolling", input$statisticID))}
install.packages(rbokeh)
install.packages("rbokeh")
shiny::runApp()
runApp()
runApp()
colors
color
runApp()
runApp()
pal_color(mycolors)
runApp()
runApp()
pal_color(mycolors)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
figure() %>%
ly_points(Sepal.Length, Sepal.Width, data = iris,
color = Species, glyph = Species,
hover = list(Sepal.Length, Sepal.Width))
figure() %>%
ly_points(Sepal.Length, Sepal.Width, data = iris,
color = Species, glyph = Species,
hover = list(Sepal.Length, Sepal.Width)) %>%
theme_legend(label_text_font_size = "2pt")
figure() %>%
ly_points(Sepal.Length, Sepal.Width, data = iris,
color = Species, glyph = Species,
hover = list(Sepal.Length, Sepal.Width)) %>%
theme_legend(label_text_font_size = "8pt")
figure() %>%
ly_points(Sepal.Length, Sepal.Width, data = iris,
color = Species, glyph = Species,
hover = list(Sepal.Length, Sepal.Width)) %>%
theme_legend(label_text_font_size = "10pt")
runApp()
nrd
nrd
tm_shape(nrd, bbox = stn_map_selected %>% st_buffer(50000) %>% st_bbox()) +
tm_borders()
tm_shape(nrd) +
tm_borders()
tm_shape(nrd %>% select("ORG_UNIT_NAME")) +
tm_borders()
tm("view")
tmap_mode("view")
tm_shape(nrd %>% select("ORG_UNIT_NAME")) +
tm_borders()
tm_shape(nrd %>% select("ORG_UNIT_NAME")) +
tm_borders(hover = "ORG_UNIT_NAME")
tm_shape(nrd %>% select("ORG_UNIT_NAME")) +
tm_borders(hover = "ORG_UNIT_NAME")
tm_shape(nrd %>% select("ORG_UNIT_NAME")) +
tm_borders(hover = ORG_UNIT_NAME)
tm_shape(nrd %>% select("ORG_UNIT_NAME")) +
tm_borders(col = ORG_UNIT_NAME)
tm_shape(nrd %>% select("ORG_UNIT_NAME")) +
tm_borders(col = "ORG_UNIT_NAME")
nrd
tm_shape(nrd)) +
tm_borders(col = "ORG_UNIT_NAME")
tm_shape(nrd)) +
tm_borders(col = "ORG_UNIT_NAME")
tm_shape(nrd) +
tm_borders(col = "ORG_UNIT_NAME")
tm_shape(nrd) +
tm_borders(col = "red")
tm_shape(nrd) +
tm_polygons(col = "red")
tm_shape(nrd) +
tm_polygons(col = "ORG_UNIT")
tm_shape(nrd) +
tm_polygons(col = "ORG_UNIT_NAME")
tm_shape(nrd) +
tm_polygons(col = "ORG_UNIT_NAME", hover = "ORG_UNIT_NAME")
tm_shape(nrd) +
tm_polygons(col = "ORG_UNIT_NAME", hover = ORG_UNIT_NAME)
tm_shape(nrd) +
tm_polygons(col = "ORG_UNIT_NAME") +
tm_text("iso_a3", size="AREA", scale=1.5)
tm_shape(nrd) +
tm_polygons(col = "ORG_UNIT_NAME") +
tm_text("ORG_UNIT_NAME", scale=1.5)
tm_shape(nrd) +
tm_polygons(col = NA) +
tm_text("ORG_UNIT_NAME", scale=1.5)
tm_shape(nrd) +
tm_borders() +
tm_text("ORG_UNIT_NAME", scale=1.5)
tm_shape(nrd) +
tm_borders() +
tm_text("ORG_UNIT_NAME", scale=1)
runApp()
shiny::runApp()
