
# DOWNLOAD INITIAL DATASET
url <- "https://www.for.gov.bc.ca/ftp/HPR/external/!publish/BCWS_DATA_MART/2022/"
# date_download_end <- as.Date(now())-1
# dates <- seq(as.Date("2022-04-14"),date_download_end,by="1 day")
# plan(multisession)
# df <- do.call(bind_rows, future_lapply(dates, function(d){
#   fread(paste0(url,d,".csv"), header = T) %>% as_tibble() %>% 
#     mutate(date = as.Date.character(DATE_TIME, format = "%Y%m%d"),
#            time = substr(DATE_TIME, 9,10),
#            datetime = as_datetime(paste0(date, time, ":00:00")))}))
# readr::write_csv(df, paste0("data/df_",gsub("-","",date_download_end),".csv"))

# READ DATASET(LOCAL) 
df <- fread("data/df_20221030.csv", header = T)
df <- df %>% as_tibble()

# UPDATE DATASET (LOCAL)
max_date <- max(df$date)
df <- df %>% filter(date != max_date)


update_dates <- seq(as.Date(max_date),as.Date(format(now(), format = "%Y-%m-%d")), by = "1 day")

df_update <- do.call(bind_rows, lapply(update_dates, function(d){
  # d <- update_dates[3]
  fread(paste0(url,d,".csv"), header = T) %>% as_tibble() %>%
    mutate(date = as.Date.character(DATE_TIME, format = "%Y%m%d"),
           time = substr(DATE_TIME, 9,10),
           datetime = as_datetime(paste0(date, time, ":00:00")))}))

df <- bind_rows(df, df_update %>% mutate(time = as.integer(time)))

# VARS

vars <- c("PRECIPITATION",
          "TEMPERATURE",
          "RELATIVE_HUMIDITY",
          "WIND_SPEED",
          "WIND_DIRECTION",
          "FINE_FUEL_MOISTURE_CODE",
          "INITIAL_SPREAD_INDEX",
          "FIRE_WEATHER_INDEX",
          "DUFF_MOISTURE_CODE",
          "DROUGHT_CODE",
          "BUILDUP_INDEX",
          "DANGER_RATING",
          "RN_1_PLUVIO1",
          "SNOW_DEPTH",
          "SNOW_DEPTH_QUALITY",
          "PRECIP_PLUVIO1_STATUS",
          "PRECIP_PLUVIO1_TOTAL",
          "RN_1_PLUVIO2",
          "PRECIP_PLUVIO2_STATUS",
          "PRECIP_PLUVIO2_TOTAL",
          "RN_1_RIT",
          "PRECIP_RIT_STATUS",
          "PRECIP_RIT_TOTAL",
          "PRECIP_RGT",
          "SOLAR_RADIATION_LICOR",
          "SOLAR_RADIATION_CM3")

# JOIN 

stn <- read_sf("data/stn.gpkg") %>% 
  mutate(STATION_ID = paste0(STATION_NAME, " ID:",STATION_CODE))
stn_name <- stn %>% st_drop_geometry() %>% select(STATION_CODE, STATION_NAME)

df <- df %>% full_join(stn_name)


# IDS 
df <- df %>% 
  mutate(STATION_ID = paste0(STATION_NAME, " ID:",STATION_CODE))

df <- df %>% filter(!is.na(DATE_TIME))
ids <- sort(unique(df$STATION_ID))


